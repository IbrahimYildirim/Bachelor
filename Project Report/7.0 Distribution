7.0 Distribution

iPhone users download and update their app's thorugh App Store. In order to release app's in the there one would have to enroll in a Apple developer program, and that cost 99$/year. In this case the client had a existing enterprise developer program, so the app was released the clients account. 

[Fig 1 - Apple Distribution Flow]

As it is seen in the in the figure abowe you need access to Apple's member center. In there you handle all the signing of the app, and can create App ID's that that's required in order to release the app later. In there you have a overview of devices, developers, app's that are registered to the account.

The figure below shows the a small part of the interface in member center.

[Fig 2 - Member Center]

7.1 Apple Member Center, Certificates & Code Signing

Apple makes a big deal out of code signing. Unlike Android, it's required to sign the code in order to run the app on real devices, whether it be your own, those of clients or for customers on the App Store. If code signing is not used, the app will only will only be able to run on a simulator or a jailbroken device - which is not enough if you want to reach a wide audience. 

And just as important, to properly test the code a physical device is a must. The simulator (Xcode comes with a built-in simulator) does an excellent job for an initial level of testing, but there three main reasons youn eed to test on an actual device before you ship:

	- A physical device is usually slower
	- A physical device has far less memory
	- There some APIs that work only on a physical device

In Xcode versions prior to 5.0 it was necessary to enter Member Center, register your device, create a development certificate and provisioning profile, then download that certificate, and copy it into xCode before testing on a physical device would be possible. 

The newer versions of Xcode (5.0+) made it way simpler. If a project doesnt have a certificate, or the device is not added to the device list, it suggest to "fix issue" by automatically adding the device - and create a certificate if none is existing - as long as you are logged in with a valid account in Xcode.

[Fig 3 - Example of issue with provisioning profiles]

"Certificates" bundles of data that represent trust. They are the guarantee that you, the named developer, built this code, that you are a member of the developer program, and that Apple have issued you with a certificate to do so.

It is possible to develop app's without a being enrolled in a developer program. But the only way to run and test the app would be with the simulater. 

7.1.1 Provisioning Profiles & SSL Certificate for push notifications
A provisioning profile is a combination of

	- The unique App ID
	- The different certificates signed by a developer
	- List of restricted set of devices it can run on

A provisioning profile accompanies the device by being copied into Xcode and from there onto the device. While in development Xcode can generate a development provisioning profile automatically - as described earlier by "fix issue" - but when it about time to release the app, it is necessary to create a production provisioning profile for the app. 

In order to enable push notifications in an app, it needs to be signed with a provisioning profile that is configured for push. In additions, the server need to sign its communications to Apple's Push Notification Server (APNS) with an SSL certificate. In this project this is automatically handled by parse by uploading the generated certificate to the parse dashboard.

The provisioning profile and SSL certificate are closely tied together and are only valid for a single App ID. This is a protection that ensures only signed servers can send push notifications to instances of an app that matches that profile, and no one else. 

7.2 Itunes Connect
When all the code signing and provisioning profiles are done it is about time to get the app in the App Store. Every developer/enterprise in the developer programme, get a iTunes Connect account aswell when they register for the programme.

[Fig 4 - iTunes Connect]

The iTunes Connect page handles all communication with App Store. Once the App ID is created in the Member Center, it is possible to create the app record and all information of the app such as

	- Screenshots
	- Description
	- Price Tier
	- Company Info
	- iTunes Logo
	- Price Tier
	- Territories for the app to be available.
	- Select build from Xcode

When clicked "Create new App", it is only possible to select the app ID's that are created in Member Center. That is why it is important to do that first, before you are able to create a app record in iTunes Connect.

In short Member Center is the place where you handle the technical part of your app, and iTunes connect is the portal that connects your app with the App Store.

When developing apps for iOS it's not possible to get the app in a file and run it on a phone as it is with Android (unless the iPhone is jailbroken). To upload the app to the app record, the build have to be uploaded to iTunes connect from Xcode. That is done by logging in with the same account, as the app is being created by, and then you can archive the product and submit it to the app store. When that is done, it is possible to see all uploaded builds in iTunes Connect, and then it's possible to select the one the one to submit.

[Fig 5 Application Uploader Xcode]

7.3 Updates
The first verion (2.0 - 1.0 was MoveBizz, the app name was changed in the update) of this app was released 1st of March 2015, by the request of the client. The agreement that was made in the beginning included two versions. The first was a basic one, where the user could

	-Create profile & login with existing
	-Create/join/delete events
	-See Events & Event Info
	-See own profile
	-Edit profile

The second version (2.1) was released one month after 1st of May 2015 and there was added some new features to the app such as

	-Push Notifications
	-Chat: with other participants in the same event (only if you attending the event)
	-Discover Function: Find other people by radius, and see their favorite sport categories & attending events. 
	-Invite other people to events
	-Public Profile

Unless there is new features added such as Push Notification, in App-Purchase, Game-Center, etc. the update can be made in iTunes connect only. If there is change to the app's functions (as mentioned abowe), it would be necessary to create the certificates in Member Center. For the first version it was necessary to create a new provisioning profile, because the "signer" of the app was not the same one as version 1.0. In the second one it was necesary to create certificates for Push-Notifications. During development, development profiles was used, and before submitting, production profiles were created.

7.4 Sales & Trends
Because the app have been in App Store for almost two months, there is some data for how much it have been downloaded. The figure below shows number of downloads from 1st February to 25th May 2015.

[Fig 6]



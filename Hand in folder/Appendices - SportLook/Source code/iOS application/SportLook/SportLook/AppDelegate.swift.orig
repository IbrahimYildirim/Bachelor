//
//  AppDelegate.swift
//  SportLook
//
//  Created by Terminator on 24/02/15.
//  Copyright (c) 2015 BachelorProject. All rights reserved.
//

import UIKit

@UIApplicationMain
class AppDelegate: UIResponder, UIApplicationDelegate {

    var window: UIWindow?

    func application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?) -> Bool {
        
        // Override point for customization after application launch.
        self.window = UIWindow(frame: UIScreen.mainScreen().bounds)

        handleFirstScreen()
        self.window!.makeKeyAndVisible()
        setNavigationBarStyle()
        FBLoginView.self
        
        return true
    }
    
    func application(application: UIApplication, openURL url:NSURL, sourceApplication: NSString?, annotation: AnyObject) -> Bool {
        
        var wasHandled : Bool = FBAppCall.handleOpenURL(url, sourceApplication: sourceApplication)
        return wasHandled
    }
    
    func handleFirstScreen(){
        
<<<<<<< HEAD
        if shouldClearUserLoggedToken(){
            KeychainHandler.clearUserLoggedToken()
        }
=======
        //For testing
//        KeychainHandler.clearUserLoggedToken()
//        KeychainHandler.saveUserLoggedToken("cc4531431baa42bb0daba4e3955c043e")
>>>>>>> feature-edit-event
        
        if let userLoggedToken = KeychainHandler.getUserLoggedToken() as String? {
            //User logged in. There is a token saved
            
            //Show tabBarController
            let controller = SportLookTabBarController()
            self.window!.rootViewController = controller
        } else {
            //Show HomeScreen
            
            let controller = HomeViewController()
            var navController: UINavigationController = UINavigationController(rootViewController: controller)
            self.window!.rootViewController = navController
        }
    }
    
    func shouldClearUserLoggedToken() -> Bool {

        //NSUserDefaults gets cleared when the app is uninstalled
        //Keychain doesn't get cleared
        
        let defaults = NSUserDefaults.standardUserDefaults()
        let alreadyRunOnce = defaults.boolForKey("alreadyRunOnce")
        if(!alreadyRunOnce)
        {
            defaults.setBool(true, forKey: "alreadyRunOnce")
            return true
        } else {
            return false
        }
    }
    
    func setNavigationBarStyle(){

        UINavigationBar.appearance().barTintColor = UIColor.COLOR_NAVBAR_BACKGROUND//background
        UINavigationBar.appearance().tintColor = UIColor.COLOR_NAVBAR_BACK_BUTTON//back button
//        UINavigationBar.appearance().shadowImage = //white line below nav bar
        
        let titleTextAttributes = [NSForegroundColorAttributeName: UIColor.COLOR_NAVBAR_TITLE, NSFontAttributeName: UIFont(name: UIFont.QUICKSAND_BOLD, size: 18)!]
        
        UINavigationBar.appearance().titleTextAttributes = titleTextAttributes//custom title
        
    }

    func applicationWillResignActive(application: UIApplication) {
        // Sent when the application is about to move from active to inactive state. This can occur for certain types of temporary interruptions (such as an incoming phone call or SMS message) or when the user quits the application and it begins the transition to the background state.
        // Use this method to pause ongoing tasks, disable timers, and throttle down OpenGL ES frame rates. Games should use this method to pause the game.
    }

    func applicationDidEnterBackground(application: UIApplication) {
        // Use this method to release shared resources, save user data, invalidate timers, and store enough application state information to restore your application to its current state in case it is terminated later.
        // If your application supports background execution, this method is called instead of applicationWillTerminate: when the user quits.
    }

    func applicationWillEnterForeground(application: UIApplication) {
        // Called as part of the transition from the background to the inactive state; here you can undo many of the changes made on entering the background.
    }

    func applicationDidBecomeActive(application: UIApplication) {
        // Restart any tasks that were paused (or not yet started) while the application was inactive. If the application was previously in the background, optionally refresh the user interface.
    }

    func applicationWillTerminate(application: UIApplication) {
        // Called when the application is about to terminate. Save data if appropriate. See also applicationDidEnterBackground:.
    }

}

